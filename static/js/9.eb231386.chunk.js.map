{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Dragger","Upload","Result","styled","div","H1","a","h1","Image","img","StyledButton","Button","Component","observer","useStores","ImageStore","UserStore","store","useRef","useLocalStore","width","setWidth","widthStr","height","setHeight","heightStr","fullStr","serverFile","attributes","url","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","window","test","type","size","error","upload","then","console","log","catch","tip","spinning","isUploading","className","InboxOutlined","target","href","onClick","value","copy","info","filename","src","alt","Tips","children","Home","Uploader"],"mappings":"wQAQOA,EAAWC,IAAXD,QAEDE,EAASC,IAAOC,IAAV,8FAUNC,GAJUF,IAAOG,EAAV,uDAIFH,IAAOI,GAAV,uEAKFC,EAAQL,IAAOM,IAAV,iDAILC,EAAeP,YAAOQ,IAAPR,CAAH,uHA0GHS,EAnGGC,aAAS,WACzB,MAAgCC,cAAzBC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,UAIbC,GAHOC,mBACAA,mBAECC,aAAc,iBAAM,CAChCC,MAAO,KACPC,SAFgC,SAEvBD,GACPH,EAAMG,MAAQA,GAEZE,eACF,OAAOL,EAAMG,MAAN,aAAoBH,EAAMG,OAAU,IAG7CG,OAAQ,KACRC,UAVgC,SAUtBD,GACRN,EAAMM,OAASA,GAEbE,gBACF,OAAOR,EAAMM,OAAN,aAAqBN,EAAMM,QAAW,IAE3CG,cAEF,OAAOX,EAAWY,WAAWC,WAAWC,IAAID,WAAWC,IAAM,gBAAkBZ,EAAMK,SAAWL,EAAMQ,gBASpGK,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAAAC,GAGZ,OAFAlB,EAAWmB,QAAQD,GACnBlB,EAAWoB,YAAYF,EAAKG,MACC,OAA1BpB,EAAUqB,aACXC,IAAQC,QAAQ,mCACT,IAETC,OAAOP,KAAOA,EACV,wCAAwCQ,KAAKR,EAAKS,MAInDT,EAAKU,KAAO,SACbL,IAAQM,MAAM,wDACP,IAGT7B,EAAW8B,SACRC,MAAK,SAACnB,GACLoB,QAAQC,IAAI,4BACZD,QAAQC,IAAIrB,MACXsB,OAAM,WACPF,QAAQC,IAAI,gCAET,IAfLV,IAAQM,MAAM,kFACP,MAkBb,OACE,gCACE,cAAC,IAAD,CAAMM,IAAI,qBAAMC,SAAUpC,EAAWqC,YAArC,SACA,eAACpD,EAAD,2BAAa8B,GAAb,cACE,mBAAGuB,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,kGACA,mBAAGA,UAAU,kBAAb,iJAMAtC,EAAWY,WAAa,eAACzB,EAAD,WACtB,cAACG,EAAD,iFACA,+BACE,6BAAI,6BAAI,kEACR,+BACE,cAACK,EAAD,CAAcgC,KAAK,UAAnB,SACE,mBAAGa,OAAO,SAASC,KAAOzC,EAAWY,WAAWC,WAAWC,IAAID,WAAWC,IAA1E,wCAEF,cAACnB,EAAD,CAAcgC,KAAK,UAAUe,QAAS,kBAzD/BC,EAyD8C3C,EAAWY,WAAWC,WAAWC,IAAID,WAAWC,IAxD/G8B,IAAKD,QACLpB,IAAQsB,KAAK,wCAFG,IAACF,GAyDP,yCAEF,6BAAI,6BAAI,4DACR,6BAAK3C,EAAW8C,WAChB,6BAAI,6BAAI,kEACR,6BACE,cAACrD,EAAD,CAAOsD,IAAM/C,EAAWY,WAAWC,WAAWC,IAAID,WAAWC,IAAMkC,IAAI,aAGjE,WC5HdC,EAAO7D,IAAOC,IAAV,2KAqBKQ,EAXGC,aAAU,YAAiB,IAAfoD,EAAc,EAAdA,SACpBjD,EAAcF,cAAdE,UAER,OACE,mCACGA,EAAUqB,YAAc,KAAO,cAAC2B,EAAD,UAAOC,SCdvCC,EAAOrD,aAAU,WACDC,cAAbE,UAIL,OAEE,cADA,CACA,sBACE,cAAC,EAAD,+GACA,cAACmD,EAAD,UAKOD","file":"static/js/9.eb231386.chunk.js","sourcesContent":["import React,{useRef} from 'react';\r\nimport {useStores} from '../stores';\r\nimport {observer, useLocalStore} from 'mobx-react';\r\nimport {Upload, message, Spin, Button} from 'antd';\r\nimport {InboxOutlined} from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst {Dragger} = Upload;\r\n\r\nconst Result = styled.div`\r\n  margin-top: 30px;\r\n  border:1px dashed #ccc;\r\n  padding: 20px;\r\n`\r\n\r\nconst StyledA = styled.a`\r\n  color: rgb(24,144,255);\r\n`\r\n\r\nconst H1 = styled.h1`\r\n  margin: 20px 0;\r\n  text-align: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n  max-width: 250px;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 12px;\r\n  margin-right: 6px;\r\n  padding-left: 6px;\r\n  padding-right: 6px;\r\n`\r\n\r\nconst Component = observer(() => {\r\n  const {ImageStore, UserStore} = useStores();\r\n  const ref1 = useRef();\r\n  const ref2 = useRef();\r\n\r\n  const store = useLocalStore(()=> ({\r\n    width: null,\r\n    setWidth(width){\r\n      store.width = width;\r\n    },\r\n    get widthStr() {\r\n      return store.width ? `/w/${store.width}` : '';\r\n    },\r\n\r\n    height: null,\r\n    setHeight(height){\r\n      store.height = height;\r\n    },\r\n    get heightStr(){\r\n      return store.height ? `/h/${store.height}` : '';\r\n    },\r\n    get fullStr() {\r\n      //?imageView2/0/w/800/h/400\r\n      return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\r\n    }\r\n  }))\r\n\r\n  const handleCopy= (value) =>{\r\n    copy(value)\r\n    message.info('链接复制成功')\r\n  }\r\n\r\n  const props = {\r\n    showUploadList: false,\r\n    beforeUpload: file => {\r\n      ImageStore.setFile(file);\r\n      ImageStore.setFilename(file.name);\r\n      if(UserStore.currentUser === null) {\r\n        message.warning('请先登录！');\r\n        return false;\r\n      }\r\n      window.file = file;\r\n      if(!/(svg$)|(png$)|(jpg$)|(jpeg$)|(git$)/ig.test(file.type)){\r\n        message.error('只能上传 png/svg/jpg/git 格式的图片！')\r\n        return false\r\n      }\r\n      if(file.size > 1024*1024) {\r\n        message.error('图片大小不能超过 1M')\r\n        return false\r\n      }\r\n\r\n      ImageStore.upload()\r\n        .then((serverFile)=>{\r\n          console.log('上传成功');\r\n          console.log(serverFile);\r\n        }).catch(()=>{\r\n          console.log('上传失败');\r\n        });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Spin tip=\"上传中\" spinning={ImageStore.isUploading}>\r\n      <Dragger {...props}>\r\n        <p className=\"ant-upload-drag-icon\">\r\n          <InboxOutlined />\r\n        </p>\r\n        <p className=\"ant-upload-text\">点击或拖拽图片到此处进行上传</p>\r\n        <p className=\"ant-upload-hint\">\r\n          仅支持 .png/.gif/.jpg/.svg 格式的图片，图片大小不能超过1M\r\n        </p>\r\n      </Dragger>\r\n      </Spin>\r\n      {\r\n        ImageStore.serverFile ? <Result>\r\n          <H1>阁下最近一次上传的图片</H1>\r\n          <dl>\r\n            <dt><h3><strong>线上地址</strong></h3></dt>\r\n            <dd>\r\n              <StyledButton type=\"primary\">\r\n                <a target=\"_blank\" href={ ImageStore.serverFile.attributes.url.attributes.url }>查看原图</a>\r\n              </StyledButton>\r\n              <StyledButton type=\"primary\" onClick={()=>handleCopy(ImageStore.serverFile.attributes.url.attributes.url)}>复制链接</StyledButton>\r\n            </dd>\r\n            <dt><h3><strong>文件名</strong></h3></dt>\r\n            <dd>{ImageStore.filename}</dd>\r\n            <dt><h3><strong>图片预览</strong></h3></dt>\r\n            <dd>\r\n              <Image src={ ImageStore.serverFile.attributes.url.attributes.url } alt=\"\"/>\r\n            </dd>\r\n          </dl>\r\n        </Result> : null\r\n      }\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Component;","import React from 'react';\r\nimport { useStores } from '../stores';\r\nimport { observer } from \"mobx-react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Tips = styled.div`\r\n  font-size: 16px;\r\n  background: skyblue;\r\n  padding: 10px;\r\n  margin: 30px 0;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n`\r\n\r\nconst Component = observer( ({children}) => {\r\n  const { UserStore } = useStores();\r\n\r\n  return(\r\n    <>\r\n      {UserStore.currentUser ? null : <Tips>{children}</Tips> }\r\n\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Component;","import React from 'react';\r\nimport {observer} from 'mobx-react';\r\nimport {useStores} from '../stores';\r\nimport Uploader from '../components/Uploader';\r\nimport Tips from '../components/Tips';\r\n\r\nconst Home = observer (() => {\r\n  const {UserStore} = useStores();\r\n\r\n  const User = () => <div>您好，{UserStore.currentUser.attributes.username}阁下</div>\r\n\r\n    return (\r\n      // 这是 React.Fragment 标签的简写\r\n      <>\r\n        <Tips>温馨提示：阁下请先登录再操作哦！</Tips>\r\n        <Uploader />\r\n      </>\r\n    )\r\n})\r\n\r\nexport default Home;"],"sourceRoot":""}