{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","Component","history","useHistory","AuthStore","useStores","name","labelCol","span","wrapperCol","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","Password","getFieldValue","offset","type","htmlType"],"mappings":"6MAMMA,EAAUC,IAAOC,IAAV,iKAQPC,EAAQF,IAAOG,GAAV,2EAwHIC,UAnHG,WAEhB,IAAMC,EAAUC,cAERC,EAAcC,cAAdD,UAkCR,OACE,eAACR,EAAD,WACA,cAACG,EAAD,2BACA,eAAC,IAAD,CACEO,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,SA3Ca,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBP,EAAUU,YAAYH,EAAOI,UAC7BX,EAAUY,YAAYL,EAAOM,UAC7Bb,EAAUc,WACPC,MAAK,WACJP,QAAQC,IAAI,gEACZX,EAAQkB,KAAK,QACZC,OAAM,WACPT,QAAQC,IAAI,oEAmCdS,eA/BmB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,IA+BrBC,aAAa,MAVf,UAYE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNpB,KAAK,WACLqB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,oDAEX,CACEC,UAvCe,SAACC,EAAMC,GAE9B,MAAG,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CACzDD,QAAQG,aA0Bb,SAaE,cAAC,IAAD,MAGF,cAAC,IAAKZ,KAAN,CACEC,MAAM,eACNpB,KAAK,WACLqB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CAEX,CACES,IAAK,EACLT,QAAS,4DAVf,SAcE,cAAC,IAAMU,SAAP,MAGF,cAAC,IAAKd,KAAN,CACEC,MAAM,2BACNpB,KAAK,kBACLqB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0DA7DK,SAAC,GAAD,IAAEW,EAAF,EAAEA,cAAF,MAAoB,CAC1CV,UAD0C,SAChCC,EAAMC,GACd,OAAGQ,EAAc,cAAgBR,EAAeE,QAAQG,UACjDH,QAAQC,OAAO,sCAoDtB,SAWE,cAAC,IAAMI,SAAP,MAGF,cAAC,IAAKd,KAAN,CACEhB,WAAY,CACVgC,OAAQ,EACRjC,KAAM,IAHV,SAME,cAAC,IAAD,CAAQkC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/11.7c736eb5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { useStores } from \"../stores\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Component = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const { AuthStore } = useStores();\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n    AuthStore.setUsername(values.username);\r\n    AuthStore.setPassword(values.password);\r\n    AuthStore.register()\r\n      .then(()=>{\r\n        console.log('注册成功，跳转到首页');\r\n        history.push('/');\r\n      }).catch(()=>{\r\n        console.log('注册失败，什么都不做')\r\n    })\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const validateUsername = (rule, value)=>{\r\n    //  RegExp.test()\r\n    if(/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\r\n    if(value.length < 4 || value.length > 10) return Promise.reject('长度为4~10个字符');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  // 接受一个对象，属性为 getFieldValue，返回一个对象\r\n  const validateConfirm = ({getFieldValue})=>({\r\n    validator(rule, value){\r\n      if(getFieldValue('password') === value ) return Promise.resolve();\r\n      return Promise.reject('密码不一致')\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Wrapper>\r\n    <Title>注册</Title>\r\n    <Form\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 6,\r\n      }}\r\n      wrapperCol={{\r\n        span: 12,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"用户名\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入您的用户名',\r\n          },\r\n          {\r\n            validator: validateUsername,\r\n          }\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"密码\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请输入您的密码',\r\n          },\r\n          {\r\n            min: 4,\r\n            message: '密码最少需要4个字符',\r\n          }\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"确认密码\"\r\n        name=\"confirmPassword\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: '请再次确认您的密码',\r\n          },\r\n            validateConfirm,\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 6,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Component;"],"sourceRoot":""}